<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 私人领地</title>
    <link>https://bibu2651.github.io/post/</link>
    <description>Recent content in Posts on 私人领地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Sep 2017 19:38:04 +0800</lastBuildDate>
    
	<atom:link href="https://bibu2651.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Welcome</title>
      <link>https://bibu2651.github.io/post/welcome/</link>
      <pubDate>Thu, 14 Sep 2017 19:38:04 +0800</pubDate>
      
      <guid>https://bibu2651.github.io/post/welcome/</guid>
      <description> [TOC]
雪离奥香  1300 + 3 up + 1 down + 130 g + 1 g
 飞轮效应  静止的飞轮转起来须要很大的力气，但是当它转到一定速度后，你只要很小的力，飞轮依旧会快速转动。所谓万事开头难
 破窗效应  如果一扇窗子破了，长时间不补，那么不久它周围的窗子也会被人打破。这就是环境给人的暗示作用。要给用户好的暗示
 登门槛效应  跟别人提要求时，先提一个小要求，再通过鼓励，向其提出更高要求，这样的方式更易被人接受。（达到一个具体目标时，可以从用户角度先把问题分解成较简单的组合）
 鸟笼效应  如果一个人的客厅有了一只空鸟笼，过了一段时间他很可能会买一只鸟回来。用户偶然获得一个他不须要的东西后，可能会不自觉地添加更多自己不需要的东西
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://bibu2651.github.io/post/splashactivity%E5%90%AF%E5%8A%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bibu2651.github.io/post/splashactivity%E5%90%AF%E5%8A%A8/</guid>
      <description>启动登录流程 [TOC]:
SplashActivity启动  Splash的第一要务是要快速展示给用户，所以在它的onCreate函数里并不作耗时的初始化操作，而是延迟到afterFirstShowWindow  public void startMusic(final Types.SSongInfo songInfo) { MLog.info(TAG, &amp;quot;[startMusic],start music id:%d name:%s&amp;quot;, songInfo.songId, songInfo.songName); DownloadPool.instance().cancelPlayingTask(); currentSong = songInfo; if (isDownloaded(songInfo.songId)) { mMusicHelper.playMusic(YYFileUtils.getYYMusicPath(songInfo.songId), true); } else { mMusicHelper.pauseMusic(); MusicSDKHelper.checkOnlineSong(songInfo.songId, this); } if (MakeFriendsApplication.instance().getModel(RoomModel.class).getHeadsetPlugState() != HeadsetPlugReceiver.HEADSET_PLUG_IN &amp;amp;&amp;amp; isNeedShowNoHeadsetToast()) { ToastUtil.show(MakeFriendsApplication.getApplication(), R.string.ww_room_no_song_tip); } currentAction = Types.TRoomMusicAction.kRoomMusicStart; NotificationCenter.INSTANCE.getObserver(RoomCallbacks.OnSongPlayStateChangeListener.class).onSongPlayStateChange(songInfo, Types.TRoomMusicAction.kRoomMusicStart); sendMusicPlayAction(Types.TRoomMusicAction.kRoomMusicStart); }   在SplashActivity的afterFirstShowWindow函数里，作真正的初始化工作   protected void afterFirstShowWindow() { super.afterFirstShowWindow(); runSplash(); }   目前的SplashActivity中，没有去判断当前是否有帐号，最终都会走到finishSplash 这个函数   private void finishSplash() { boolean hasMainActivity = VLApplication.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://bibu2651.github.io/post/chatme-%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bibu2651.github.io/post/chatme-%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8/</guid>
      <description> chatme 任务列表 定义接口文件 实现简单的基于nodejs/pb的Android到server端通信 实现用户登录页 实现列表页 集成语音功能 实现送礼功能 集成支付功能  Andrew-&amp;gt;China: Says Hello Note right of China: China thinks\nabout it China--&amp;gt;Andrew: How are you? Andrew-&amp;gt;&amp;gt;China: I am good thanks!  </description>
    </item>
    
  </channel>
</rss>